//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.08.23 at 07:45:34 PM CDT 
//


package referencedatamodel;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ReferenceData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReferenceData"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="DataType" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="Length" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="Precision" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="Scale" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="SchemaElementName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="SubjectHeaders" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="SubjectHeader" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element name="EndPosition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *                             &lt;element name="Length" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *                             &lt;element name="StartPosition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *                             &lt;element name="States" minOccurs="0"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element name="State" maxOccurs="unbounded" minOccurs="0"&gt;
 *                                         &lt;complexType&gt;
 *                                           &lt;complexContent&gt;
 *                                             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                               &lt;sequence&gt;
 *                                                 &lt;element name="NameOfTheState" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *                                                 &lt;element name="StateCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *                                               &lt;/sequence&gt;
 *                                             &lt;/restriction&gt;
 *                                           &lt;/complexContent&gt;
 *                                         &lt;/complexType&gt;
 *                                       &lt;/element&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element name="SubjectHeader" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="TypeName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="WCStatElementName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReferenceData", propOrder = {
    "dataType",
    "length",
    "precision",
    "scale",
    "schemaElementName",
    "subjectHeaders",
    "typeName",
    "wcStatElementName"
})
@Entity(name = "ReferenceData")
@Table(name = "REFERENCE_DATA")
@Inheritance(strategy = InheritanceType.JOINED)
public class ReferenceData
    implements Equals, HashCode
{

    @XmlElementRef(name = "DataType", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<Integer> dataType;
    @XmlElementRef(name = "Length", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<Integer> length;
    @XmlElementRef(name = "Precision", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<Integer> precision;
    @XmlElementRef(name = "Scale", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<Integer> scale;
    @XmlElementRef(name = "SchemaElementName", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<String> schemaElementName;
    @XmlElementRef(name = "SubjectHeaders", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<ReferenceData.SubjectHeaders> subjectHeaders;
    @XmlElementRef(name = "TypeName", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<String> typeName;
    @XmlElementRef(name = "WCStatElementName", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
    protected JAXBElement<String> wcStatElementName;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the dataType property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    @Transient
    public JAXBElement<Integer> getDataType() {
        return dataType;
    }

    /**
     * Sets the value of the dataType property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public void setDataType(JAXBElement<Integer> value) {
        this.dataType = value;
    }

    /**
     * Gets the value of the length property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    @Transient
    public JAXBElement<Integer> getLength() {
        return length;
    }

    /**
     * Sets the value of the length property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public void setLength(JAXBElement<Integer> value) {
        this.length = value;
    }

    /**
     * Gets the value of the precision property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    @Transient
    public JAXBElement<Integer> getPrecision() {
        return precision;
    }

    /**
     * Sets the value of the precision property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public void setPrecision(JAXBElement<Integer> value) {
        this.precision = value;
    }

    /**
     * Gets the value of the scale property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    @Transient
    public JAXBElement<Integer> getScale() {
        return scale;
    }

    /**
     * Sets the value of the scale property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public void setScale(JAXBElement<Integer> value) {
        this.scale = value;
    }

    /**
     * Gets the value of the schemaElementName property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    @Transient
    public JAXBElement<String> getSchemaElementName() {
        return schemaElementName;
    }

    /**
     * Sets the value of the schemaElementName property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setSchemaElementName(JAXBElement<String> value) {
        this.schemaElementName = value;
    }

    /**
     * Gets the value of the subjectHeaders property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link ReferenceData.SubjectHeaders }{@code >}
     *     
     */
    @Transient
    public JAXBElement<ReferenceData.SubjectHeaders> getSubjectHeaders() {
        return subjectHeaders;
    }

    /**
     * Sets the value of the subjectHeaders property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link ReferenceData.SubjectHeaders }{@code >}
     *     
     */
    public void setSubjectHeaders(JAXBElement<ReferenceData.SubjectHeaders> value) {
        this.subjectHeaders = value;
    }

    /**
     * Gets the value of the typeName property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    @Transient
    public JAXBElement<String> getTypeName() {
        return typeName;
    }

    /**
     * Sets the value of the typeName property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setTypeName(JAXBElement<String> value) {
        this.typeName = value;
    }

    /**
     * Gets the value of the wcStatElementName property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    @Transient
    public JAXBElement<String> getWCStatElementName() {
        return wcStatElementName;
    }

    /**
     * Sets the value of the wcStatElementName property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setWCStatElementName(JAXBElement<String> value) {
        this.wcStatElementName = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "DATA_TYPE_ITEM", precision = 10, scale = 0)
    public Integer getDataTypeItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends Integer> ) this.getDataType()));
    }

    public void setDataTypeItem(Integer target) {
        setDataType(XmlAdapterUtils.marshallJAXBElement(Integer.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "DataType"), ReferenceData.class, target));
    }

    @Basic
    @Column(name = "LENGTH_ITEM", precision = 10, scale = 0)
    public Integer getLengthItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends Integer> ) this.getLength()));
    }

    public void setLengthItem(Integer target) {
        setLength(XmlAdapterUtils.marshallJAXBElement(Integer.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "Length"), ReferenceData.class, target));
    }

    @Basic
    @Column(name = "PRECISION_ITEM", precision = 10, scale = 0)
    public Integer getPrecisionItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends Integer> ) this.getPrecision()));
    }

    public void setPrecisionItem(Integer target) {
        setPrecision(XmlAdapterUtils.marshallJAXBElement(Integer.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "Precision"), ReferenceData.class, target));
    }

    @Basic
    @Column(name = "SCALE_ITEM", precision = 10, scale = 0)
    public Integer getScaleItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends Integer> ) this.getScale()));
    }

    public void setScaleItem(Integer target) {
        setScale(XmlAdapterUtils.marshallJAXBElement(Integer.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "Scale"), ReferenceData.class, target));
    }

    @Basic
    @Column(name = "SCHEMA_ELEMENT_NAME_ITEM", length = 255)
    public String getSchemaElementNameItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getSchemaElementName()));
    }

    public void setSchemaElementNameItem(String target) {
        setSchemaElementName(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "SchemaElementName"), ReferenceData.class, target));
    }

    @ManyToOne(targetEntity = ReferenceData.SubjectHeaders.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUBJECT_HEADERS_ITEM_REFEREN_0")
    public ReferenceData.SubjectHeaders getSubjectHeadersItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends ReferenceData.SubjectHeaders> ) this.getSubjectHeaders()));
    }

    public void setSubjectHeadersItem(ReferenceData.SubjectHeaders target) {
        setSubjectHeaders(XmlAdapterUtils.marshallJAXBElement(ReferenceData.SubjectHeaders.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "SubjectHeaders"), ReferenceData.class, target));
    }

    @Basic
    @Column(name = "TYPE_NAME_ITEM", length = 255)
    public String getTypeNameItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getTypeName()));
    }

    public void setTypeNameItem(String target) {
        setTypeName(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "TypeName"), ReferenceData.class, target));
    }

    @Basic
    @Column(name = "WCSTAT_ELEMENT_NAME_ITEM", length = 255)
    public String getWCStatElementNameItem() {
        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getWCStatElementName()));
    }

    public void setWCStatElementNameItem(String target) {
        setWCStatElementName(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "WCStatElementName"), ReferenceData.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ReferenceData that = ((ReferenceData) object);
        {
            JAXBElement<Integer> lhsDataType;
            lhsDataType = this.getDataType();
            JAXBElement<Integer> rhsDataType;
            rhsDataType = that.getDataType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataType", lhsDataType), LocatorUtils.property(thatLocator, "dataType", rhsDataType), lhsDataType, rhsDataType)) {
                return false;
            }
        }
        {
            JAXBElement<Integer> lhsLength;
            lhsLength = this.getLength();
            JAXBElement<Integer> rhsLength;
            rhsLength = that.getLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "length", lhsLength), LocatorUtils.property(thatLocator, "length", rhsLength), lhsLength, rhsLength)) {
                return false;
            }
        }
        {
            JAXBElement<Integer> lhsPrecision;
            lhsPrecision = this.getPrecision();
            JAXBElement<Integer> rhsPrecision;
            rhsPrecision = that.getPrecision();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "precision", lhsPrecision), LocatorUtils.property(thatLocator, "precision", rhsPrecision), lhsPrecision, rhsPrecision)) {
                return false;
            }
        }
        {
            JAXBElement<Integer> lhsScale;
            lhsScale = this.getScale();
            JAXBElement<Integer> rhsScale;
            rhsScale = that.getScale();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "scale", lhsScale), LocatorUtils.property(thatLocator, "scale", rhsScale), lhsScale, rhsScale)) {
                return false;
            }
        }
        {
            JAXBElement<String> lhsSchemaElementName;
            lhsSchemaElementName = this.getSchemaElementName();
            JAXBElement<String> rhsSchemaElementName;
            rhsSchemaElementName = that.getSchemaElementName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "schemaElementName", lhsSchemaElementName), LocatorUtils.property(thatLocator, "schemaElementName", rhsSchemaElementName), lhsSchemaElementName, rhsSchemaElementName)) {
                return false;
            }
        }
        {
            JAXBElement<ReferenceData.SubjectHeaders> lhsSubjectHeaders;
            lhsSubjectHeaders = this.getSubjectHeaders();
            JAXBElement<ReferenceData.SubjectHeaders> rhsSubjectHeaders;
            rhsSubjectHeaders = that.getSubjectHeaders();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subjectHeaders", lhsSubjectHeaders), LocatorUtils.property(thatLocator, "subjectHeaders", rhsSubjectHeaders), lhsSubjectHeaders, rhsSubjectHeaders)) {
                return false;
            }
        }
        {
            JAXBElement<String> lhsTypeName;
            lhsTypeName = this.getTypeName();
            JAXBElement<String> rhsTypeName;
            rhsTypeName = that.getTypeName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "typeName", lhsTypeName), LocatorUtils.property(thatLocator, "typeName", rhsTypeName), lhsTypeName, rhsTypeName)) {
                return false;
            }
        }
        {
            JAXBElement<String> lhsWCStatElementName;
            lhsWCStatElementName = this.getWCStatElementName();
            JAXBElement<String> rhsWCStatElementName;
            rhsWCStatElementName = that.getWCStatElementName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "wcStatElementName", lhsWCStatElementName), LocatorUtils.property(thatLocator, "wcStatElementName", rhsWCStatElementName), lhsWCStatElementName, rhsWCStatElementName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            JAXBElement<Integer> theDataType;
            theDataType = this.getDataType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataType", theDataType), currentHashCode, theDataType);
        }
        {
            JAXBElement<Integer> theLength;
            theLength = this.getLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "length", theLength), currentHashCode, theLength);
        }
        {
            JAXBElement<Integer> thePrecision;
            thePrecision = this.getPrecision();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "precision", thePrecision), currentHashCode, thePrecision);
        }
        {
            JAXBElement<Integer> theScale;
            theScale = this.getScale();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "scale", theScale), currentHashCode, theScale);
        }
        {
            JAXBElement<String> theSchemaElementName;
            theSchemaElementName = this.getSchemaElementName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "schemaElementName", theSchemaElementName), currentHashCode, theSchemaElementName);
        }
        {
            JAXBElement<ReferenceData.SubjectHeaders> theSubjectHeaders;
            theSubjectHeaders = this.getSubjectHeaders();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subjectHeaders", theSubjectHeaders), currentHashCode, theSubjectHeaders);
        }
        {
            JAXBElement<String> theTypeName;
            theTypeName = this.getTypeName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "typeName", theTypeName), currentHashCode, theTypeName);
        }
        {
            JAXBElement<String> theWCStatElementName;
            theWCStatElementName = this.getWCStatElementName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "wcStatElementName", theWCStatElementName), currentHashCode, theWCStatElementName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="SubjectHeader" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element name="EndPosition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     *                   &lt;element name="Length" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     *                   &lt;element name="StartPosition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     *                   &lt;element name="States" minOccurs="0"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element name="State" maxOccurs="unbounded" minOccurs="0"&gt;
     *                               &lt;complexType&gt;
     *                                 &lt;complexContent&gt;
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                                     &lt;sequence&gt;
     *                                       &lt;element name="NameOfTheState" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     *                                       &lt;element name="StateCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     *                                     &lt;/sequence&gt;
     *                                   &lt;/restriction&gt;
     *                                 &lt;/complexContent&gt;
     *                               &lt;/complexType&gt;
     *                             &lt;/element&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                   &lt;element name="SubjectHeader" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "subjectHeader"
    })
    @Entity(name = "ReferenceData$SubjectHeaders")
    @Table(name = "SUBJECT_HEADERS")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class SubjectHeaders implements Equals, HashCode
    {

        @XmlElement(name = "SubjectHeader", nillable = true)
        protected List<ReferenceData.SubjectHeaders.SubjectHeader> subjectHeader;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the subjectHeader property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the subjectHeader property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getSubjectHeader().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ReferenceData.SubjectHeaders.SubjectHeader }
         * 
         * 
         */
        @OneToMany(targetEntity = referencedatamodel.ReferenceData.SubjectHeaders.SubjectHeader.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "SUBJECT_HEADER_SUBJECT_HEADE_0")
        public List<ReferenceData.SubjectHeaders.SubjectHeader> getSubjectHeader() {
            if (subjectHeader == null) {
                subjectHeader = new ArrayList<ReferenceData.SubjectHeaders.SubjectHeader>();
            }
            return this.subjectHeader;
        }

        /**
         * 
         * 
         */
        public void setSubjectHeader(List<ReferenceData.SubjectHeaders.SubjectHeader> subjectHeader) {
            this.subjectHeader = subjectHeader;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ReferenceData.SubjectHeaders that = ((ReferenceData.SubjectHeaders) object);
            {
                List<ReferenceData.SubjectHeaders.SubjectHeader> lhsSubjectHeader;
                lhsSubjectHeader = (((this.subjectHeader!= null)&&(!this.subjectHeader.isEmpty()))?this.getSubjectHeader():null);
                List<ReferenceData.SubjectHeaders.SubjectHeader> rhsSubjectHeader;
                rhsSubjectHeader = (((that.subjectHeader!= null)&&(!that.subjectHeader.isEmpty()))?that.getSubjectHeader():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "subjectHeader", lhsSubjectHeader), LocatorUtils.property(thatLocator, "subjectHeader", rhsSubjectHeader), lhsSubjectHeader, rhsSubjectHeader)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<ReferenceData.SubjectHeaders.SubjectHeader> theSubjectHeader;
                theSubjectHeader = (((this.subjectHeader!= null)&&(!this.subjectHeader.isEmpty()))?this.getSubjectHeader():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subjectHeader", theSubjectHeader), currentHashCode, theSubjectHeader);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element name="EndPosition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
         *         &lt;element name="Length" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
         *         &lt;element name="StartPosition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
         *         &lt;element name="States" minOccurs="0"&gt;
         *           &lt;complexType&gt;
         *             &lt;complexContent&gt;
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *                 &lt;sequence&gt;
         *                   &lt;element name="State" maxOccurs="unbounded" minOccurs="0"&gt;
         *                     &lt;complexType&gt;
         *                       &lt;complexContent&gt;
         *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *                           &lt;sequence&gt;
         *                             &lt;element name="NameOfTheState" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
         *                             &lt;element name="StateCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
         *                           &lt;/sequence&gt;
         *                         &lt;/restriction&gt;
         *                       &lt;/complexContent&gt;
         *                     &lt;/complexType&gt;
         *                   &lt;/element&gt;
         *                 &lt;/sequence&gt;
         *               &lt;/restriction&gt;
         *             &lt;/complexContent&gt;
         *           &lt;/complexType&gt;
         *         &lt;/element&gt;
         *         &lt;element name="SubjectHeader" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "endPosition",
            "length",
            "startPosition",
            "states",
            "subjectHeader"
        })
        @Entity(name = "ReferenceData$SubjectHeaders$SubjectHeader")
        @Table(name = "SUBJECT_HEADER")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class SubjectHeader
            implements Equals, HashCode
        {

            @XmlElementRef(name = "EndPosition", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
            protected JAXBElement<String> endPosition;
            @XmlElementRef(name = "Length", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
            protected JAXBElement<String> length;
            @XmlElementRef(name = "StartPosition", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
            protected JAXBElement<String> startPosition;
            @XmlElementRef(name = "States", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
            protected JAXBElement<ReferenceData.SubjectHeaders.SubjectHeader.States> states;
            @XmlElementRef(name = "SubjectHeader", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
            protected JAXBElement<String> subjectHeader;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the endPosition property.
             * 
             * @return
             *     possible object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            @Transient
            public JAXBElement<String> getEndPosition() {
                return endPosition;
            }

            /**
             * Sets the value of the endPosition property.
             * 
             * @param value
             *     allowed object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            public void setEndPosition(JAXBElement<String> value) {
                this.endPosition = value;
            }

            /**
             * Gets the value of the length property.
             * 
             * @return
             *     possible object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            @Transient
            public JAXBElement<String> getLength() {
                return length;
            }

            /**
             * Sets the value of the length property.
             * 
             * @param value
             *     allowed object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            public void setLength(JAXBElement<String> value) {
                this.length = value;
            }

            /**
             * Gets the value of the startPosition property.
             * 
             * @return
             *     possible object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            @Transient
            public JAXBElement<String> getStartPosition() {
                return startPosition;
            }

            /**
             * Sets the value of the startPosition property.
             * 
             * @param value
             *     allowed object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            public void setStartPosition(JAXBElement<String> value) {
                this.startPosition = value;
            }

            /**
             * Gets the value of the states property.
             * 
             * @return
             *     possible object is
             *     {@link JAXBElement }{@code <}{@link ReferenceData.SubjectHeaders.SubjectHeader.States }{@code >}
             *     
             */
            @Transient
            public JAXBElement<ReferenceData.SubjectHeaders.SubjectHeader.States> getStates() {
                return states;
            }

            /**
             * Sets the value of the states property.
             * 
             * @param value
             *     allowed object is
             *     {@link JAXBElement }{@code <}{@link ReferenceData.SubjectHeaders.SubjectHeader.States }{@code >}
             *     
             */
            public void setStates(JAXBElement<ReferenceData.SubjectHeaders.SubjectHeader.States> value) {
                this.states = value;
            }

            /**
             * Gets the value of the subjectHeader property.
             * 
             * @return
             *     possible object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            @Transient
            public JAXBElement<String> getSubjectHeader() {
                return subjectHeader;
            }

            /**
             * Sets the value of the subjectHeader property.
             * 
             * @param value
             *     allowed object is
             *     {@link JAXBElement }{@code <}{@link String }{@code >}
             *     
             */
            public void setSubjectHeader(JAXBElement<String> value) {
                this.subjectHeader = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            @Basic
            @Column(name = "END_POSITION_ITEM", length = 255)
            public String getEndPositionItem() {
                return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getEndPosition()));
            }

            public void setEndPositionItem(String target) {
                setEndPosition(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "EndPosition"), ReferenceData.SubjectHeaders.SubjectHeader.class, target));
            }

            @Basic
            @Column(name = "LENGTH_ITEM", length = 255)
            public String getLengthItem() {
                return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getLength()));
            }

            public void setLengthItem(String target) {
                setLength(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "Length"), ReferenceData.SubjectHeaders.SubjectHeader.class, target));
            }

            @Basic
            @Column(name = "START_POSITION_ITEM", length = 255)
            public String getStartPositionItem() {
                return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getStartPosition()));
            }

            public void setStartPositionItem(String target) {
                setStartPosition(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "StartPosition"), ReferenceData.SubjectHeaders.SubjectHeader.class, target));
            }

            @ManyToOne(targetEntity = referencedatamodel.ReferenceData.SubjectHeaders.SubjectHeader.States.class, cascade = {
                CascadeType.ALL
            })
            @JoinColumn(name = "STATES_ITEM_SUBJECT_HEADER_H_0")
            public ReferenceData.SubjectHeaders.SubjectHeader.States getStatesItem() {
                return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends ReferenceData.SubjectHeaders.SubjectHeader.States> ) this.getStates()));
            }

            public void setStatesItem(ReferenceData.SubjectHeaders.SubjectHeader.States target) {
                setStates(XmlAdapterUtils.marshallJAXBElement(ReferenceData.SubjectHeaders.SubjectHeader.States.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "States"), ReferenceData.SubjectHeaders.SubjectHeader.class, target));
            }

            @Basic
            @Column(name = "SUBJECT_HEADER_ITEM", length = 255)
            public String getSubjectHeaderItem() {
                return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getSubjectHeader()));
            }

            public void setSubjectHeaderItem(String target) {
                setSubjectHeader(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "SubjectHeader"), ReferenceData.SubjectHeaders.SubjectHeader.class, target));
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if ((object == null)||(this.getClass()!= object.getClass())) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final ReferenceData.SubjectHeaders.SubjectHeader that = ((ReferenceData.SubjectHeaders.SubjectHeader) object);
                {
                    JAXBElement<String> lhsEndPosition;
                    lhsEndPosition = this.getEndPosition();
                    JAXBElement<String> rhsEndPosition;
                    rhsEndPosition = that.getEndPosition();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "endPosition", lhsEndPosition), LocatorUtils.property(thatLocator, "endPosition", rhsEndPosition), lhsEndPosition, rhsEndPosition)) {
                        return false;
                    }
                }
                {
                    JAXBElement<String> lhsLength;
                    lhsLength = this.getLength();
                    JAXBElement<String> rhsLength;
                    rhsLength = that.getLength();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "length", lhsLength), LocatorUtils.property(thatLocator, "length", rhsLength), lhsLength, rhsLength)) {
                        return false;
                    }
                }
                {
                    JAXBElement<String> lhsStartPosition;
                    lhsStartPosition = this.getStartPosition();
                    JAXBElement<String> rhsStartPosition;
                    rhsStartPosition = that.getStartPosition();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "startPosition", lhsStartPosition), LocatorUtils.property(thatLocator, "startPosition", rhsStartPosition), lhsStartPosition, rhsStartPosition)) {
                        return false;
                    }
                }
                {
                    JAXBElement<ReferenceData.SubjectHeaders.SubjectHeader.States> lhsStates;
                    lhsStates = this.getStates();
                    JAXBElement<ReferenceData.SubjectHeaders.SubjectHeader.States> rhsStates;
                    rhsStates = that.getStates();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "states", lhsStates), LocatorUtils.property(thatLocator, "states", rhsStates), lhsStates, rhsStates)) {
                        return false;
                    }
                }
                {
                    JAXBElement<String> lhsSubjectHeader;
                    lhsSubjectHeader = this.getSubjectHeader();
                    JAXBElement<String> rhsSubjectHeader;
                    rhsSubjectHeader = that.getSubjectHeader();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "subjectHeader", lhsSubjectHeader), LocatorUtils.property(thatLocator, "subjectHeader", rhsSubjectHeader), lhsSubjectHeader, rhsSubjectHeader)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    JAXBElement<String> theEndPosition;
                    theEndPosition = this.getEndPosition();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "endPosition", theEndPosition), currentHashCode, theEndPosition);
                }
                {
                    JAXBElement<String> theLength;
                    theLength = this.getLength();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "length", theLength), currentHashCode, theLength);
                }
                {
                    JAXBElement<String> theStartPosition;
                    theStartPosition = this.getStartPosition();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "startPosition", theStartPosition), currentHashCode, theStartPosition);
                }
                {
                    JAXBElement<ReferenceData.SubjectHeaders.SubjectHeader.States> theStates;
                    theStates = this.getStates();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "states", theStates), currentHashCode, theStates);
                }
                {
                    JAXBElement<String> theSubjectHeader;
                    theSubjectHeader = this.getSubjectHeader();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subjectHeader", theSubjectHeader), currentHashCode, theSubjectHeader);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType&gt;
             *   &lt;complexContent&gt;
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
             *       &lt;sequence&gt;
             *         &lt;element name="State" maxOccurs="unbounded" minOccurs="0"&gt;
             *           &lt;complexType&gt;
             *             &lt;complexContent&gt;
             *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
             *                 &lt;sequence&gt;
             *                   &lt;element name="NameOfTheState" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
             *                   &lt;element name="StateCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
             *                 &lt;/sequence&gt;
             *               &lt;/restriction&gt;
             *             &lt;/complexContent&gt;
             *           &lt;/complexType&gt;
             *         &lt;/element&gt;
             *       &lt;/sequence&gt;
             *     &lt;/restriction&gt;
             *   &lt;/complexContent&gt;
             * &lt;/complexType&gt;
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "state"
            })
            @Entity(name = "ReferenceData$SubjectHeaders$SubjectHeader$States")
            @Table(name = "STATES")
            @Inheritance(strategy = InheritanceType.JOINED)
            public static class States implements Equals, HashCode
            {

                @XmlElement(name = "State", nillable = true)
                protected List<ReferenceData.SubjectHeaders.SubjectHeader.States.State> state;
                @XmlAttribute(name = "Hjid")
                protected Long hjid;

                /**
                 * Gets the value of the state property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the state property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getState().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link ReferenceData.SubjectHeaders.SubjectHeader.States.State }
                 * 
                 * 
                 */
                @OneToMany(targetEntity = referencedatamodel.ReferenceData.SubjectHeaders.SubjectHeader.States.State.class, cascade = {
                    CascadeType.ALL
                })
                @JoinColumn(name = "STATE__STATES_HJID")
                public List<ReferenceData.SubjectHeaders.SubjectHeader.States.State> getState() {
                    if (state == null) {
                        state = new ArrayList<ReferenceData.SubjectHeaders.SubjectHeader.States.State>();
                    }
                    return this.state;
                }

                /**
                 * 
                 * 
                 */
                public void setState(List<ReferenceData.SubjectHeaders.SubjectHeader.States.State> state) {
                    this.state = state;
                }

                /**
                 * Gets the value of the hjid property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Long }
                 *     
                 */
                @Id
                @Column(name = "HJID")
                @GeneratedValue(strategy = GenerationType.AUTO)
                public Long getHjid() {
                    return hjid;
                }

                /**
                 * Sets the value of the hjid property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Long }
                 *     
                 */
                public void setHjid(Long value) {
                    this.hjid = value;
                }

                public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                    if ((object == null)||(this.getClass()!= object.getClass())) {
                        return false;
                    }
                    if (this == object) {
                        return true;
                    }
                    final ReferenceData.SubjectHeaders.SubjectHeader.States that = ((ReferenceData.SubjectHeaders.SubjectHeader.States) object);
                    {
                        List<ReferenceData.SubjectHeaders.SubjectHeader.States.State> lhsState;
                        lhsState = (((this.state!= null)&&(!this.state.isEmpty()))?this.getState():null);
                        List<ReferenceData.SubjectHeaders.SubjectHeader.States.State> rhsState;
                        rhsState = (((that.state!= null)&&(!that.state.isEmpty()))?that.getState():null);
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "state", lhsState), LocatorUtils.property(thatLocator, "state", rhsState), lhsState, rhsState)) {
                            return false;
                        }
                    }
                    return true;
                }

                public boolean equals(Object object) {
                    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                    return equals(null, null, object, strategy);
                }

                public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                    int currentHashCode = 1;
                    {
                        List<ReferenceData.SubjectHeaders.SubjectHeader.States.State> theState;
                        theState = (((this.state!= null)&&(!this.state.isEmpty()))?this.getState():null);
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "state", theState), currentHashCode, theState);
                    }
                    return currentHashCode;
                }

                public int hashCode() {
                    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                    return this.hashCode(null, strategy);
                }


                /**
                 * <p>Java class for anonymous complex type.
                 * 
                 * <p>The following schema fragment specifies the expected content contained within this class.
                 * 
                 * <pre>
                 * &lt;complexType&gt;
                 *   &lt;complexContent&gt;
                 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
                 *       &lt;sequence&gt;
                 *         &lt;element name="NameOfTheState" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
                 *         &lt;element name="StateCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
                 *       &lt;/sequence&gt;
                 *     &lt;/restriction&gt;
                 *   &lt;/complexContent&gt;
                 * &lt;/complexType&gt;
                 * </pre>
                 * 
                 * 
                 */
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "nameOfTheState",
                    "stateCode"
                })
                @Entity(name = "ReferenceData$SubjectHeaders$SubjectHeader$States$State")
                @Table(name = "STATE_")
                @Inheritance(strategy = InheritanceType.JOINED)
                public static class State
                    implements Equals, HashCode
                {

                    @XmlElementRef(name = "NameOfTheState", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
                    protected JAXBElement<String> nameOfTheState;
                    @XmlElementRef(name = "StateCode", namespace = "http://guidewire.com/bc/gx/referencedatamodel", type = JAXBElement.class, required = false)
                    protected JAXBElement<String> stateCode;
                    @XmlAttribute(name = "Hjid")
                    protected Long hjid;

                    /**
                     * Gets the value of the nameOfTheState property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link JAXBElement }{@code <}{@link String }{@code >}
                     *     
                     */
                    @Transient
                    public JAXBElement<String> getNameOfTheState() {
                        return nameOfTheState;
                    }

                    /**
                     * Sets the value of the nameOfTheState property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link JAXBElement }{@code <}{@link String }{@code >}
                     *     
                     */
                    public void setNameOfTheState(JAXBElement<String> value) {
                        this.nameOfTheState = value;
                    }

                    /**
                     * Gets the value of the stateCode property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link JAXBElement }{@code <}{@link String }{@code >}
                     *     
                     */
                    @Transient
                    public JAXBElement<String> getStateCode() {
                        return stateCode;
                    }

                    /**
                     * Sets the value of the stateCode property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link JAXBElement }{@code <}{@link String }{@code >}
                     *     
                     */
                    public void setStateCode(JAXBElement<String> value) {
                        this.stateCode = value;
                    }

                    /**
                     * Gets the value of the hjid property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link Long }
                     *     
                     */
                    @Id
                    @Column(name = "HJID")
                    @GeneratedValue(strategy = GenerationType.AUTO)
                    public Long getHjid() {
                        return hjid;
                    }

                    /**
                     * Sets the value of the hjid property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link Long }
                     *     
                     */
                    public void setHjid(Long value) {
                        this.hjid = value;
                    }

                    @Basic
                    @Column(name = "NAME_OF_THE_STATE_ITEM", length = 255)
                    public String getNameOfTheStateItem() {
                        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getNameOfTheState()));
                    }

                    public void setNameOfTheStateItem(String target) {
                        setNameOfTheState(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "NameOfTheState"), ReferenceData.SubjectHeaders.SubjectHeader.States.State.class, target));
                    }

                    @Basic
                    @Column(name = "STATE_CODE_ITEM", length = 255)
                    public String getStateCodeItem() {
                        return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getStateCode()));
                    }

                    public void setStateCodeItem(String target) {
                        setStateCode(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("http://guidewire.com/bc/gx/referencedatamodel", "StateCode"), ReferenceData.SubjectHeaders.SubjectHeader.States.State.class, target));
                    }

                    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                        if ((object == null)||(this.getClass()!= object.getClass())) {
                            return false;
                        }
                        if (this == object) {
                            return true;
                        }
                        final ReferenceData.SubjectHeaders.SubjectHeader.States.State that = ((ReferenceData.SubjectHeaders.SubjectHeader.States.State) object);
                        {
                            JAXBElement<String> lhsNameOfTheState;
                            lhsNameOfTheState = this.getNameOfTheState();
                            JAXBElement<String> rhsNameOfTheState;
                            rhsNameOfTheState = that.getNameOfTheState();
                            if (!strategy.equals(LocatorUtils.property(thisLocator, "nameOfTheState", lhsNameOfTheState), LocatorUtils.property(thatLocator, "nameOfTheState", rhsNameOfTheState), lhsNameOfTheState, rhsNameOfTheState)) {
                                return false;
                            }
                        }
                        {
                            JAXBElement<String> lhsStateCode;
                            lhsStateCode = this.getStateCode();
                            JAXBElement<String> rhsStateCode;
                            rhsStateCode = that.getStateCode();
                            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateCode", lhsStateCode), LocatorUtils.property(thatLocator, "stateCode", rhsStateCode), lhsStateCode, rhsStateCode)) {
                                return false;
                            }
                        }
                        return true;
                    }

                    public boolean equals(Object object) {
                        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                        return equals(null, null, object, strategy);
                    }

                    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                        int currentHashCode = 1;
                        {
                            JAXBElement<String> theNameOfTheState;
                            theNameOfTheState = this.getNameOfTheState();
                            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nameOfTheState", theNameOfTheState), currentHashCode, theNameOfTheState);
                        }
                        {
                            JAXBElement<String> theStateCode;
                            theStateCode = this.getStateCode();
                            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateCode", theStateCode), currentHashCode, theStateCode);
                        }
                        return currentHashCode;
                    }

                    public int hashCode() {
                        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                        return this.hashCode(null, strategy);
                    }

                }

            }

        }

    }

}
