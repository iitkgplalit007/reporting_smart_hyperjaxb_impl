//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.08.23 at 07:45:34 PM CDT 
//


package https.www_wcio_org.xml.wcstat;

import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="DataProviderContactEMailAddress" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/&gt;
 *         &lt;element name="DataTypeCode" type="{https://www.wcio.org/XML/WCSTAT}DataTypeCode_Type"/&gt;
 *         &lt;element name="DataReceiverCode" type="{https://www.wcio.org/XML/WCSTAT}DataReceiverCode_Type"/&gt;
 *         &lt;element name="TransmissionVersionIdentifier" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="SubmissionTypeCode" type="{https://www.wcio.org/XML/WCSTAT}SubmissionTypeCode_Type"/&gt;
 *         &lt;element name="SubmissionReplacementIdentifier" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/&gt;
 *         &lt;element name="DataProviderCode" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="NameOfDataProviderContact" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="ElectronicOrPaperReceiptCode" type="{https://www.wcio.org/XML/WCSTAT}ElectronicOrPaperReceiptCode_Type" minOccurs="0"/&gt;
 *         &lt;element name="PhoneNumber" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="PhoneNumberExtension" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="FaxNumber" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="ProcessedDate" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="AddressOfContactStreet" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="AddressOfContactCity" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="AddressOfContactState" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="AddressOfContactZipCode" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *         &lt;element name="DataProviderTypeCode" type="{https://www.wcio.org/XML/WCSTAT}DataProviderTypeCode_Type"/&gt;
 *         &lt;element name="ThirdPartyEntityFederalEmployerIdentificationNumber" type="{http://www.w3.org/2001/XMLSchema}token"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "dataProviderContactEMailAddress",
    "dataTypeCode",
    "dataReceiverCode",
    "transmissionVersionIdentifier",
    "submissionTypeCode",
    "submissionReplacementIdentifier",
    "dataProviderCode",
    "nameOfDataProviderContact",
    "electronicOrPaperReceiptCode",
    "phoneNumber",
    "phoneNumberExtension",
    "faxNumber",
    "processedDate",
    "addressOfContactStreet",
    "addressOfContactCity",
    "addressOfContactState",
    "addressOfContactZipCode",
    "dataProviderTypeCode",
    "thirdPartyEntityFederalEmployerIdentificationNumber"
})
@XmlRootElement(name = "Transmittal")
@Entity(name = "Transmittal")
@Table(name = "TRANSMITTAL")
@Inheritance(strategy = InheritanceType.JOINED)
public class Transmittal
    implements Equals, HashCode
{

    @XmlElement(name = "DataProviderContactEMailAddress")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String dataProviderContactEMailAddress;
    @XmlElement(name = "DataTypeCode", required = true)
    @XmlSchemaType(name = "token")
    protected DataTypeCodeType dataTypeCode;
    @XmlElement(name = "DataReceiverCode")
    protected int dataReceiverCode;
    @XmlElement(name = "TransmissionVersionIdentifier", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String transmissionVersionIdentifier;
    @XmlElement(name = "SubmissionTypeCode", required = true)
    @XmlSchemaType(name = "token")
    protected SubmissionTypeCodeType submissionTypeCode;
    @XmlElement(name = "SubmissionReplacementIdentifier")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String submissionReplacementIdentifier;
    @XmlElement(name = "DataProviderCode", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String dataProviderCode;
    @XmlElement(name = "NameOfDataProviderContact", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String nameOfDataProviderContact;
    @XmlElement(name = "ElectronicOrPaperReceiptCode")
    @XmlSchemaType(name = "token")
    protected ElectronicOrPaperReceiptCodeType electronicOrPaperReceiptCode;
    @XmlElement(name = "PhoneNumber", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String phoneNumber;
    @XmlElement(name = "PhoneNumberExtension", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String phoneNumberExtension;
    @XmlElement(name = "FaxNumber", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String faxNumber;
    @XmlElement(name = "ProcessedDate", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar processedDate;
    @XmlElement(name = "AddressOfContactStreet", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String addressOfContactStreet;
    @XmlElement(name = "AddressOfContactCity", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String addressOfContactCity;
    @XmlElement(name = "AddressOfContactState", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String addressOfContactState;
    @XmlElement(name = "AddressOfContactZipCode", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String addressOfContactZipCode;
    @XmlElement(name = "DataProviderTypeCode", required = true)
    @XmlSchemaType(name = "token")
    protected DataProviderTypeCodeType dataProviderTypeCode;
    @XmlElement(name = "ThirdPartyEntityFederalEmployerIdentificationNumber", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String thirdPartyEntityFederalEmployerIdentificationNumber;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the dataProviderContactEMailAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DATA_PROVIDER_CONTACT_EMAIL__0", length = 255)
    public String getDataProviderContactEMailAddress() {
        return dataProviderContactEMailAddress;
    }

    /**
     * Sets the value of the dataProviderContactEMailAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDataProviderContactEMailAddress(String value) {
        this.dataProviderContactEMailAddress = value;
    }

    /**
     * Gets the value of the dataTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link DataTypeCodeType }
     *     
     */
    @Basic
    @Column(name = "DATA_TYPE_CODE", length = 255)
    @Enumerated(EnumType.STRING)
    public DataTypeCodeType getDataTypeCode() {
        return dataTypeCode;
    }

    /**
     * Sets the value of the dataTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataTypeCodeType }
     *     
     */
    public void setDataTypeCode(DataTypeCodeType value) {
        this.dataTypeCode = value;
    }

    /**
     * Gets the value of the dataReceiverCode property.
     * 
     */
    @Basic
    @Column(name = "DATA_RECEIVER_CODE", precision = 10, scale = 0)
    public int getDataReceiverCode() {
        return dataReceiverCode;
    }

    /**
     * Sets the value of the dataReceiverCode property.
     * 
     */
    public void setDataReceiverCode(int value) {
        this.dataReceiverCode = value;
    }

    /**
     * Gets the value of the transmissionVersionIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSMISSION_VERSION_IDENTIF_0", length = 255)
    public String getTransmissionVersionIdentifier() {
        return transmissionVersionIdentifier;
    }

    /**
     * Sets the value of the transmissionVersionIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransmissionVersionIdentifier(String value) {
        this.transmissionVersionIdentifier = value;
    }

    /**
     * Gets the value of the submissionTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link SubmissionTypeCodeType }
     *     
     */
    @Basic
    @Column(name = "SUBMISSION_TYPE_CODE", length = 255)
    @Enumerated(EnumType.STRING)
    public SubmissionTypeCodeType getSubmissionTypeCode() {
        return submissionTypeCode;
    }

    /**
     * Sets the value of the submissionTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link SubmissionTypeCodeType }
     *     
     */
    public void setSubmissionTypeCode(SubmissionTypeCodeType value) {
        this.submissionTypeCode = value;
    }

    /**
     * Gets the value of the submissionReplacementIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUBMISSION_REPLACEMENT_IDENT_0", length = 255)
    public String getSubmissionReplacementIdentifier() {
        return submissionReplacementIdentifier;
    }

    /**
     * Sets the value of the submissionReplacementIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubmissionReplacementIdentifier(String value) {
        this.submissionReplacementIdentifier = value;
    }

    /**
     * Gets the value of the dataProviderCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DATA_PROVIDER_CODE", length = 255)
    public String getDataProviderCode() {
        return dataProviderCode;
    }

    /**
     * Sets the value of the dataProviderCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDataProviderCode(String value) {
        this.dataProviderCode = value;
    }

    /**
     * Gets the value of the nameOfDataProviderContact property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NAME_OF_DATA_PROVIDER_CONTACT", length = 255)
    public String getNameOfDataProviderContact() {
        return nameOfDataProviderContact;
    }

    /**
     * Sets the value of the nameOfDataProviderContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNameOfDataProviderContact(String value) {
        this.nameOfDataProviderContact = value;
    }

    /**
     * Gets the value of the electronicOrPaperReceiptCode property.
     * 
     * @return
     *     possible object is
     *     {@link ElectronicOrPaperReceiptCodeType }
     *     
     */
    @Basic
    @Column(name = "ELECTRONIC_OR_PAPER_RECEIPT__0", length = 255)
    @Enumerated(EnumType.STRING)
    public ElectronicOrPaperReceiptCodeType getElectronicOrPaperReceiptCode() {
        return electronicOrPaperReceiptCode;
    }

    /**
     * Sets the value of the electronicOrPaperReceiptCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElectronicOrPaperReceiptCodeType }
     *     
     */
    public void setElectronicOrPaperReceiptCode(ElectronicOrPaperReceiptCodeType value) {
        this.electronicOrPaperReceiptCode = value;
    }

    /**
     * Gets the value of the phoneNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PHONE_NUMBER", length = 255)
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Sets the value of the phoneNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhoneNumber(String value) {
        this.phoneNumber = value;
    }

    /**
     * Gets the value of the phoneNumberExtension property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PHONE_NUMBER_EXTENSION", length = 255)
    public String getPhoneNumberExtension() {
        return phoneNumberExtension;
    }

    /**
     * Sets the value of the phoneNumberExtension property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhoneNumberExtension(String value) {
        this.phoneNumberExtension = value;
    }

    /**
     * Gets the value of the faxNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FAX_NUMBER", length = 255)
    public String getFaxNumber() {
        return faxNumber;
    }

    /**
     * Sets the value of the faxNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFaxNumber(String value) {
        this.faxNumber = value;
    }

    /**
     * Gets the value of the processedDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getProcessedDate() {
        return processedDate;
    }

    /**
     * Sets the value of the processedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setProcessedDate(XMLGregorianCalendar value) {
        this.processedDate = value;
    }

    /**
     * Gets the value of the addressOfContactStreet property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ADDRESS_OF_CONTACT_STREET", length = 255)
    public String getAddressOfContactStreet() {
        return addressOfContactStreet;
    }

    /**
     * Sets the value of the addressOfContactStreet property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressOfContactStreet(String value) {
        this.addressOfContactStreet = value;
    }

    /**
     * Gets the value of the addressOfContactCity property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ADDRESS_OF_CONTACT_CITY", length = 255)
    public String getAddressOfContactCity() {
        return addressOfContactCity;
    }

    /**
     * Sets the value of the addressOfContactCity property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressOfContactCity(String value) {
        this.addressOfContactCity = value;
    }

    /**
     * Gets the value of the addressOfContactState property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ADDRESS_OF_CONTACT_STATE", length = 255)
    public String getAddressOfContactState() {
        return addressOfContactState;
    }

    /**
     * Sets the value of the addressOfContactState property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressOfContactState(String value) {
        this.addressOfContactState = value;
    }

    /**
     * Gets the value of the addressOfContactZipCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ADDRESS_OF_CONTACT_ZIP_CODE", length = 255)
    public String getAddressOfContactZipCode() {
        return addressOfContactZipCode;
    }

    /**
     * Sets the value of the addressOfContactZipCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressOfContactZipCode(String value) {
        this.addressOfContactZipCode = value;
    }

    /**
     * Gets the value of the dataProviderTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link DataProviderTypeCodeType }
     *     
     */
    @Basic
    @Column(name = "DATA_PROVIDER_TYPE_CODE", length = 255)
    @Enumerated(EnumType.STRING)
    public DataProviderTypeCodeType getDataProviderTypeCode() {
        return dataProviderTypeCode;
    }

    /**
     * Sets the value of the dataProviderTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataProviderTypeCodeType }
     *     
     */
    public void setDataProviderTypeCode(DataProviderTypeCodeType value) {
        this.dataProviderTypeCode = value;
    }

    /**
     * Gets the value of the thirdPartyEntityFederalEmployerIdentificationNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "THIRD_PARTY_ENTITY_FEDERAL_E_0", length = 255)
    public String getThirdPartyEntityFederalEmployerIdentificationNumber() {
        return thirdPartyEntityFederalEmployerIdentificationNumber;
    }

    /**
     * Sets the value of the thirdPartyEntityFederalEmployerIdentificationNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setThirdPartyEntityFederalEmployerIdentificationNumber(String value) {
        this.thirdPartyEntityFederalEmployerIdentificationNumber = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "PROCESSED_DATE_ITEM")
    @Temporal(TemporalType.DATE)
    public Date getProcessedDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getProcessedDate());
    }

    public void setProcessedDateItem(Date target) {
        setProcessedDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Transmittal that = ((Transmittal) object);
        {
            String lhsDataProviderContactEMailAddress;
            lhsDataProviderContactEMailAddress = this.getDataProviderContactEMailAddress();
            String rhsDataProviderContactEMailAddress;
            rhsDataProviderContactEMailAddress = that.getDataProviderContactEMailAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataProviderContactEMailAddress", lhsDataProviderContactEMailAddress), LocatorUtils.property(thatLocator, "dataProviderContactEMailAddress", rhsDataProviderContactEMailAddress), lhsDataProviderContactEMailAddress, rhsDataProviderContactEMailAddress)) {
                return false;
            }
        }
        {
            DataTypeCodeType lhsDataTypeCode;
            lhsDataTypeCode = this.getDataTypeCode();
            DataTypeCodeType rhsDataTypeCode;
            rhsDataTypeCode = that.getDataTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataTypeCode", lhsDataTypeCode), LocatorUtils.property(thatLocator, "dataTypeCode", rhsDataTypeCode), lhsDataTypeCode, rhsDataTypeCode)) {
                return false;
            }
        }
        {
            int lhsDataReceiverCode;
            lhsDataReceiverCode = this.getDataReceiverCode();
            int rhsDataReceiverCode;
            rhsDataReceiverCode = that.getDataReceiverCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataReceiverCode", lhsDataReceiverCode), LocatorUtils.property(thatLocator, "dataReceiverCode", rhsDataReceiverCode), lhsDataReceiverCode, rhsDataReceiverCode)) {
                return false;
            }
        }
        {
            String lhsTransmissionVersionIdentifier;
            lhsTransmissionVersionIdentifier = this.getTransmissionVersionIdentifier();
            String rhsTransmissionVersionIdentifier;
            rhsTransmissionVersionIdentifier = that.getTransmissionVersionIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transmissionVersionIdentifier", lhsTransmissionVersionIdentifier), LocatorUtils.property(thatLocator, "transmissionVersionIdentifier", rhsTransmissionVersionIdentifier), lhsTransmissionVersionIdentifier, rhsTransmissionVersionIdentifier)) {
                return false;
            }
        }
        {
            SubmissionTypeCodeType lhsSubmissionTypeCode;
            lhsSubmissionTypeCode = this.getSubmissionTypeCode();
            SubmissionTypeCodeType rhsSubmissionTypeCode;
            rhsSubmissionTypeCode = that.getSubmissionTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "submissionTypeCode", lhsSubmissionTypeCode), LocatorUtils.property(thatLocator, "submissionTypeCode", rhsSubmissionTypeCode), lhsSubmissionTypeCode, rhsSubmissionTypeCode)) {
                return false;
            }
        }
        {
            String lhsSubmissionReplacementIdentifier;
            lhsSubmissionReplacementIdentifier = this.getSubmissionReplacementIdentifier();
            String rhsSubmissionReplacementIdentifier;
            rhsSubmissionReplacementIdentifier = that.getSubmissionReplacementIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "submissionReplacementIdentifier", lhsSubmissionReplacementIdentifier), LocatorUtils.property(thatLocator, "submissionReplacementIdentifier", rhsSubmissionReplacementIdentifier), lhsSubmissionReplacementIdentifier, rhsSubmissionReplacementIdentifier)) {
                return false;
            }
        }
        {
            String lhsDataProviderCode;
            lhsDataProviderCode = this.getDataProviderCode();
            String rhsDataProviderCode;
            rhsDataProviderCode = that.getDataProviderCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataProviderCode", lhsDataProviderCode), LocatorUtils.property(thatLocator, "dataProviderCode", rhsDataProviderCode), lhsDataProviderCode, rhsDataProviderCode)) {
                return false;
            }
        }
        {
            String lhsNameOfDataProviderContact;
            lhsNameOfDataProviderContact = this.getNameOfDataProviderContact();
            String rhsNameOfDataProviderContact;
            rhsNameOfDataProviderContact = that.getNameOfDataProviderContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nameOfDataProviderContact", lhsNameOfDataProviderContact), LocatorUtils.property(thatLocator, "nameOfDataProviderContact", rhsNameOfDataProviderContact), lhsNameOfDataProviderContact, rhsNameOfDataProviderContact)) {
                return false;
            }
        }
        {
            ElectronicOrPaperReceiptCodeType lhsElectronicOrPaperReceiptCode;
            lhsElectronicOrPaperReceiptCode = this.getElectronicOrPaperReceiptCode();
            ElectronicOrPaperReceiptCodeType rhsElectronicOrPaperReceiptCode;
            rhsElectronicOrPaperReceiptCode = that.getElectronicOrPaperReceiptCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "electronicOrPaperReceiptCode", lhsElectronicOrPaperReceiptCode), LocatorUtils.property(thatLocator, "electronicOrPaperReceiptCode", rhsElectronicOrPaperReceiptCode), lhsElectronicOrPaperReceiptCode, rhsElectronicOrPaperReceiptCode)) {
                return false;
            }
        }
        {
            String lhsPhoneNumber;
            lhsPhoneNumber = this.getPhoneNumber();
            String rhsPhoneNumber;
            rhsPhoneNumber = that.getPhoneNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumber", lhsPhoneNumber), LocatorUtils.property(thatLocator, "phoneNumber", rhsPhoneNumber), lhsPhoneNumber, rhsPhoneNumber)) {
                return false;
            }
        }
        {
            String lhsPhoneNumberExtension;
            lhsPhoneNumberExtension = this.getPhoneNumberExtension();
            String rhsPhoneNumberExtension;
            rhsPhoneNumberExtension = that.getPhoneNumberExtension();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumberExtension", lhsPhoneNumberExtension), LocatorUtils.property(thatLocator, "phoneNumberExtension", rhsPhoneNumberExtension), lhsPhoneNumberExtension, rhsPhoneNumberExtension)) {
                return false;
            }
        }
        {
            String lhsFaxNumber;
            lhsFaxNumber = this.getFaxNumber();
            String rhsFaxNumber;
            rhsFaxNumber = that.getFaxNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "faxNumber", lhsFaxNumber), LocatorUtils.property(thatLocator, "faxNumber", rhsFaxNumber), lhsFaxNumber, rhsFaxNumber)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsProcessedDate;
            lhsProcessedDate = this.getProcessedDate();
            XMLGregorianCalendar rhsProcessedDate;
            rhsProcessedDate = that.getProcessedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "processedDate", lhsProcessedDate), LocatorUtils.property(thatLocator, "processedDate", rhsProcessedDate), lhsProcessedDate, rhsProcessedDate)) {
                return false;
            }
        }
        {
            String lhsAddressOfContactStreet;
            lhsAddressOfContactStreet = this.getAddressOfContactStreet();
            String rhsAddressOfContactStreet;
            rhsAddressOfContactStreet = that.getAddressOfContactStreet();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressOfContactStreet", lhsAddressOfContactStreet), LocatorUtils.property(thatLocator, "addressOfContactStreet", rhsAddressOfContactStreet), lhsAddressOfContactStreet, rhsAddressOfContactStreet)) {
                return false;
            }
        }
        {
            String lhsAddressOfContactCity;
            lhsAddressOfContactCity = this.getAddressOfContactCity();
            String rhsAddressOfContactCity;
            rhsAddressOfContactCity = that.getAddressOfContactCity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressOfContactCity", lhsAddressOfContactCity), LocatorUtils.property(thatLocator, "addressOfContactCity", rhsAddressOfContactCity), lhsAddressOfContactCity, rhsAddressOfContactCity)) {
                return false;
            }
        }
        {
            String lhsAddressOfContactState;
            lhsAddressOfContactState = this.getAddressOfContactState();
            String rhsAddressOfContactState;
            rhsAddressOfContactState = that.getAddressOfContactState();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressOfContactState", lhsAddressOfContactState), LocatorUtils.property(thatLocator, "addressOfContactState", rhsAddressOfContactState), lhsAddressOfContactState, rhsAddressOfContactState)) {
                return false;
            }
        }
        {
            String lhsAddressOfContactZipCode;
            lhsAddressOfContactZipCode = this.getAddressOfContactZipCode();
            String rhsAddressOfContactZipCode;
            rhsAddressOfContactZipCode = that.getAddressOfContactZipCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressOfContactZipCode", lhsAddressOfContactZipCode), LocatorUtils.property(thatLocator, "addressOfContactZipCode", rhsAddressOfContactZipCode), lhsAddressOfContactZipCode, rhsAddressOfContactZipCode)) {
                return false;
            }
        }
        {
            DataProviderTypeCodeType lhsDataProviderTypeCode;
            lhsDataProviderTypeCode = this.getDataProviderTypeCode();
            DataProviderTypeCodeType rhsDataProviderTypeCode;
            rhsDataProviderTypeCode = that.getDataProviderTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataProviderTypeCode", lhsDataProviderTypeCode), LocatorUtils.property(thatLocator, "dataProviderTypeCode", rhsDataProviderTypeCode), lhsDataProviderTypeCode, rhsDataProviderTypeCode)) {
                return false;
            }
        }
        {
            String lhsThirdPartyEntityFederalEmployerIdentificationNumber;
            lhsThirdPartyEntityFederalEmployerIdentificationNumber = this.getThirdPartyEntityFederalEmployerIdentificationNumber();
            String rhsThirdPartyEntityFederalEmployerIdentificationNumber;
            rhsThirdPartyEntityFederalEmployerIdentificationNumber = that.getThirdPartyEntityFederalEmployerIdentificationNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "thirdPartyEntityFederalEmployerIdentificationNumber", lhsThirdPartyEntityFederalEmployerIdentificationNumber), LocatorUtils.property(thatLocator, "thirdPartyEntityFederalEmployerIdentificationNumber", rhsThirdPartyEntityFederalEmployerIdentificationNumber), lhsThirdPartyEntityFederalEmployerIdentificationNumber, rhsThirdPartyEntityFederalEmployerIdentificationNumber)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theDataProviderContactEMailAddress;
            theDataProviderContactEMailAddress = this.getDataProviderContactEMailAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataProviderContactEMailAddress", theDataProviderContactEMailAddress), currentHashCode, theDataProviderContactEMailAddress);
        }
        {
            DataTypeCodeType theDataTypeCode;
            theDataTypeCode = this.getDataTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataTypeCode", theDataTypeCode), currentHashCode, theDataTypeCode);
        }
        {
            int theDataReceiverCode;
            theDataReceiverCode = this.getDataReceiverCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataReceiverCode", theDataReceiverCode), currentHashCode, theDataReceiverCode);
        }
        {
            String theTransmissionVersionIdentifier;
            theTransmissionVersionIdentifier = this.getTransmissionVersionIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transmissionVersionIdentifier", theTransmissionVersionIdentifier), currentHashCode, theTransmissionVersionIdentifier);
        }
        {
            SubmissionTypeCodeType theSubmissionTypeCode;
            theSubmissionTypeCode = this.getSubmissionTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "submissionTypeCode", theSubmissionTypeCode), currentHashCode, theSubmissionTypeCode);
        }
        {
            String theSubmissionReplacementIdentifier;
            theSubmissionReplacementIdentifier = this.getSubmissionReplacementIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "submissionReplacementIdentifier", theSubmissionReplacementIdentifier), currentHashCode, theSubmissionReplacementIdentifier);
        }
        {
            String theDataProviderCode;
            theDataProviderCode = this.getDataProviderCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataProviderCode", theDataProviderCode), currentHashCode, theDataProviderCode);
        }
        {
            String theNameOfDataProviderContact;
            theNameOfDataProviderContact = this.getNameOfDataProviderContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nameOfDataProviderContact", theNameOfDataProviderContact), currentHashCode, theNameOfDataProviderContact);
        }
        {
            ElectronicOrPaperReceiptCodeType theElectronicOrPaperReceiptCode;
            theElectronicOrPaperReceiptCode = this.getElectronicOrPaperReceiptCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "electronicOrPaperReceiptCode", theElectronicOrPaperReceiptCode), currentHashCode, theElectronicOrPaperReceiptCode);
        }
        {
            String thePhoneNumber;
            thePhoneNumber = this.getPhoneNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumber", thePhoneNumber), currentHashCode, thePhoneNumber);
        }
        {
            String thePhoneNumberExtension;
            thePhoneNumberExtension = this.getPhoneNumberExtension();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumberExtension", thePhoneNumberExtension), currentHashCode, thePhoneNumberExtension);
        }
        {
            String theFaxNumber;
            theFaxNumber = this.getFaxNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "faxNumber", theFaxNumber), currentHashCode, theFaxNumber);
        }
        {
            XMLGregorianCalendar theProcessedDate;
            theProcessedDate = this.getProcessedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "processedDate", theProcessedDate), currentHashCode, theProcessedDate);
        }
        {
            String theAddressOfContactStreet;
            theAddressOfContactStreet = this.getAddressOfContactStreet();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressOfContactStreet", theAddressOfContactStreet), currentHashCode, theAddressOfContactStreet);
        }
        {
            String theAddressOfContactCity;
            theAddressOfContactCity = this.getAddressOfContactCity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressOfContactCity", theAddressOfContactCity), currentHashCode, theAddressOfContactCity);
        }
        {
            String theAddressOfContactState;
            theAddressOfContactState = this.getAddressOfContactState();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressOfContactState", theAddressOfContactState), currentHashCode, theAddressOfContactState);
        }
        {
            String theAddressOfContactZipCode;
            theAddressOfContactZipCode = this.getAddressOfContactZipCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressOfContactZipCode", theAddressOfContactZipCode), currentHashCode, theAddressOfContactZipCode);
        }
        {
            DataProviderTypeCodeType theDataProviderTypeCode;
            theDataProviderTypeCode = this.getDataProviderTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataProviderTypeCode", theDataProviderTypeCode), currentHashCode, theDataProviderTypeCode);
        }
        {
            String theThirdPartyEntityFederalEmployerIdentificationNumber;
            theThirdPartyEntityFederalEmployerIdentificationNumber = this.getThirdPartyEntityFederalEmployerIdentificationNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "thirdPartyEntityFederalEmployerIdentificationNumber", theThirdPartyEntityFederalEmployerIdentificationNumber), currentHashCode, theThirdPartyEntityFederalEmployerIdentificationNumber);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
